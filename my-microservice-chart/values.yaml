replicaCount: 1

image:
  repository: "aithrien/my-microservice" # ðŸ‘ˆ Change this if deploying from your own DockerHub repo
  tag: latest
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
securityContext: {}

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Environment variables configuration
env:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  UNLEASH_URL: "http://unleash-server.unleash.svc.cluster.local:4242/api"
  UNLEASH_APP_NAME: "cicd-lab-app"
  UNLEASH_REFRESH_INTERVAL: "2"
  # Rate limiter configuration
  RATE_LIMIT_WINDOW_MS: "900000"  # 15 minutes
  RATE_LIMIT_MAX: "100"

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 3
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 3
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []
volumeMounts: []

nodeSelector: {}
tolerations: []
affinity: {}

# Unleash configuration
unleash:
  enabled: true
  service:
    type: ClusterIP
    port: 4242
  admin:
    token: ""  # Will be provided via Kubernetes secret
  client:
    tokens: []  # Will be provided via Kubernetes secret
  database:
    type: sqlite
    sqlite:
      path: /tmp/unleash.db
